<template>
  <div id="coupon-detail">
    <head-top class="header ">
      <i slot="left" class="top_icon iconfont icon-back"></i>
      <img slot="title" class="flight_logo" style="margin-left:-1.5rem;" :src="require('../../assets/images/home/home-logo.png')" alt="Online Travel Agency" title="Lowest Airfares in India">
    </head-top>
    <div class="marTop" v-show="isShowBtn"></div>
    <section class="d_content">
      <div class="section1">
        <div class="s1-title">Quick View</div>
        <div class="s1-center s1-center1 flex space-between">
          <div class="c1-left">
            <img :src="require('../../assets/images/coupon/copy.png')" alt="">
            <span>Coupon Code</span>
          </div>
          <div class="c1-right" @click="copyCode" id="copyUrl1">
            <span>{{couponCode}}</span>
          </div>
        </div>
        <div class="s1-center s1-center2 flex space-between">
          <div class="c1-left">
            <img :src="require('../../assets/images/coupon/calendar.png')" alt="">
            <span>Validity</span>
          </div>
          <div class="c1-right">
            <span>{{startTime}} - {{endTime}}</span>
          </div>
        </div>
        <div class="s1-center s1-center3 flex space-between">
          <div class="c1-left">
            <img :src="require('../../assets/images/coupon/p_m.png')" alt="">
            <span>Booking Channel</span>
          </div>
          <div class="c1-right">
            <span v-if="!couponType1">{{couponType}}</span>
            <span v-else>{{couponType2}}</span>
          </div>
        </div>
      </div>
      <div class="section2">
        <div class="s2-title">Offer Details</div>
        <ul>
          <li v-html="description">{{description}}</li>
        </ul>
      </div>
      <div class="section2">
        <div class="s2-title">Terms &amp; Conditions</div>
        <ul>
          <li v-html="tc">{{tc}}</li>
        </ul>
      </div>
    </section>
  </div>
</template>
<script>
import Clipboard from 'clipboard';
import {Toast,Indicator } from "mint-ui";
import headTop from '../../components/head/head.vue';
import { DomainManager } from "../../config/DomainManager.js";
import {AppBridge} from '../../models/appbridge/appbridge.js';
export default {
  components:{
    headTop
  },
  data(){
    return {
      id:0,
      tc:'',
      couponCode:"",
      description:'',
      startTime:'',
      endTime:'',
      flag:true,
      couponType:'',
      couponType1:false,
      couponType2:'All Devices',
      isShowBtn:false,
      months:['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec']
    }
  },
  methods:{
    loadCouponData(){
      let that = this
      let code = this.$route.query.code
      let type = this.$route.query.type
      let url = DomainManager.getCouponDetail()+'?code='+code+'&type='+type
      this.$http({
        type:'get',
        url:url,
        headers:{"x-Device":"mobile"}
      }).then(res => {
        that.tc = res.data.data[0].tc
        that.couponCode = res.data.data[0].couponCode
        that.couponType = res.data.data[0].suitablePlatform
        that.couponType1 = res.data.data[0].suitablePlatform.split(",").length > 3?true:false
        that.description = res.data.data[0].landingPageDescription
        let timer1 = new Date(res.data.data[0].startDate)
        let timer2 = new Date(res.data.data[0].endDate)
        that.startTime = this.months[timer1.getMonth()]+' '+timer1.getDate()+', '+timer1.getFullYear();
        that.endTime = this.months[timer2.getMonth()]+' '+timer2.getDate()+', '+timer1.getFullYear();
      }).catch(err => {console.log(err)})
    },
    copyCode(){
      let that = this,clipboard;
      if(this.flag){
        this.flag = false;
        clipboard = new Clipboard('#copyUrl1',{
          text: function() {
            return that.couponCode;
          }
        });
        clipboard.on('success', function(e) {
          Toast({
            message:"Successfully copied to the Clipboard! ",
            duration:1200
          });
          e.clearSelection();
          clipboard.destroy();
        });
        clipboard.on('error', function(e) {
          Toast({
            message:"Copy failed, please input manually! ",
            duration:1200
          });
          e.clearSelection();
          clipboard.destroy();
        });
        setTimeout(function(){
          that.flag = true;
        },1200);
      }
    }
  },
  async created(){
    this.isShowBtn = await AppBridge.getNativeSource(this);
    this.id = this.$route.query.id;
    this.loadCouponData();
  }
}
</script>
<style lang="less" scoped>
#coupon-detail{
  .header {
    background: #0b9d78;
    img{
      width: 6.4rem;
    }
  }
  .marTop{margin-top:2.04rem;}
  .d_content{
    text-align: left;
    margin-bottom:1rem;
  }
  .section1{
    .s1-center{
      margin:0.5rem 0.64rem 0;
      padding-bottom: 0.64rem;
      border-bottom: 1px solid #CDCDCD;
      .c1-left{
        img{
          width:0.769rem;
          vertical-align: middle;
        }
        span{
          font-size:0.512rem;
          color:3333;
        }
      }
    }
    .s1-title{
      font-size:0.68rem;
      color:#333;
      line-height: 0.81rem;
      font-weight: bold;
      padding:0.5rem 0.64rem 0;
    }
    .s1-center1{
      .c1-right{
        cursor: pointer;
        span{
          font-weight: bold;
          font-size:0.64rem;
          color:#0B9D78;
          border-bottom:1px solid #0B9D78;
        }
      }
    }
    .s1-center2{
      .c1-right{
        span{
          font-size:0.598rem;
          color: #333333;
          font-weight: bold;
        }
      }
    }
    .s1-center3{
      margin: 0;
      padding:0.5rem 0.64rem 0.64rem;
      .c1-right{
        span{
          font-size:0.598rem;
          color: #333333;
          font-weight: bold;
        }
      }
    }
  }
  .section2{
    padding:0.64rem;
    border-bottom: 1px solid #CDCDCD;
    .s2-title{
      font-size: 0.68rem;
      color: #333333;
      font-weight: bold;
      margin-bottom: 0.3rem;
    }
    li{
      font-size: 0.512rem;
      line-height: 0.78rem;
      color: #333333;
      font-family: "SFCompactText-Regular";
    }
  }
}
</style>